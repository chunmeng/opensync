/*
Copyright (c) 2015, Plume Design Inc. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
   3. Neither the name of the Plume Design Inc. nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: gatekeeper.proto */

#ifndef PROTOBUF_C_gatekeeper_2eproto__INCLUDED
#define PROTOBUF_C_gatekeeper_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Gatekeeper__Southbound__V1__GatekeeperCommonRequest Gatekeeper__Southbound__V1__GatekeeperCommonRequest;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperFqdnReq Gatekeeper__Southbound__V1__GatekeeperFqdnReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperAppReq Gatekeeper__Southbound__V1__GatekeeperAppReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpHostReq Gatekeeper__Southbound__V1__GatekeeperHttpHostReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv4Req Gatekeeper__Southbound__V1__GatekeeperIpv4Req;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv6Req Gatekeeper__Southbound__V1__GatekeeperIpv6Req;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperReq Gatekeeper__Southbound__V1__GatekeeperReq;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperCommonReply Gatekeeper__Southbound__V1__GatekeeperCommonReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperFqdnReply Gatekeeper__Southbound__V1__GatekeeperFqdnReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv4Reply Gatekeeper__Southbound__V1__GatekeeperIpv4Reply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv6Reply Gatekeeper__Southbound__V1__GatekeeperIpv6Reply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperAppReply Gatekeeper__Southbound__V1__GatekeeperAppReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpHostReply Gatekeeper__Southbound__V1__GatekeeperHttpHostReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply;
typedef struct _Gatekeeper__Southbound__V1__GatekeeperReply Gatekeeper__Southbound__V1__GatekeeperReply;


/* --- enums --- */

/*
 * IP flow direction definitions
 */
typedef enum _Gatekeeper__Southbound__V1__GatekeeperFlowDirection {
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_UNSPECIFIED = 0,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_OUTBOUND = 1,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_INBOUND = 2,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_LAN2LAN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION)
} Gatekeeper__Southbound__V1__GatekeeperFlowDirection;
/*
 * Originator definition, needed when presenting an IP flow tuple
 */
typedef enum _Gatekeeper__Southbound__V1__GatekeeperFlowOriginator {
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_UNSPECIFIED = 0,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_SOURCE = 1,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_DESTINATION = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR)
} Gatekeeper__Southbound__V1__GatekeeperFlowOriginator;
/*
 * Action definition
 */
typedef enum _Gatekeeper__Southbound__V1__GatekeeperAction {
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION__GATEKEEPER_ACTION_UNSPECIFIED = 0,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION__GATEKEEPER_ACTION_ACCEPT = 1,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION__GATEKEEPER_ACTION_BLOCK = 2,
  GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION__GATEKEEPER_ACTION_REDIRECT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION)
} Gatekeeper__Southbound__V1__GatekeeperAction;

/* --- messages --- */

/*
 * Gatekeeper Request common fields
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperCommonRequest
{
  ProtobufCMessage base;
  uint32_t request_id;
  /*
   * MAC address
   */
  ProtobufCBinaryData device_id;
  char *node_id;
  char *location_id;
  char *policy_rule;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_COMMON_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_common_request__descriptor) \
    , 0, {0,NULL}, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * DNS gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperFqdnReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  char *fqdn;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FQDN_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_fqdn_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * App gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperAppReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  char *app_name;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_APP_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_app_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * HTTPS SNI gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  char *https_sni;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTPS_SNI_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_https_sni_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * HTTP Host gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpHostReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  char *http_host;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTP_HOST_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_http_host_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * HTTP URL gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  char *http_url;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTP_URL_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_http_url_req__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


/*
 * IPv4 tuple representation
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple
{
  ProtobufCMessage base;
  uint32_t source_ipv4;
  uint32_t destination_ipv4;
  uint32_t transport;
  uint32_t source_port;
  uint32_t destination_port;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV4_FLOW_TUPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__descriptor) \
    , 0, 0, 0, 0, 0 }


/*
 * IPv4 tuple Gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple *flow_ipv4;
  Gatekeeper__Southbound__V1__GatekeeperFlowDirection flow_direction;
  Gatekeeper__Southbound__V1__GatekeeperFlowOriginator flow_originator;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV4_TUPLE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__descriptor) \
    , NULL, NULL, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_UNSPECIFIED, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_UNSPECIFIED }


/*
 * IPv6 tuple representation
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple
{
  ProtobufCMessage base;
  ProtobufCBinaryData source_ipv6;
  ProtobufCBinaryData destination_ipv6;
  uint32_t transport;
  uint32_t source_port;
  uint32_t destination_port;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV6_FLOW_TUPLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__descriptor) \
    , {0,NULL}, {0,NULL}, 0, 0, 0 }


/*
 * IPv6 tuple Gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple *flow_ipv6;
  Gatekeeper__Southbound__V1__GatekeeperFlowDirection flow_direction;
  Gatekeeper__Southbound__V1__GatekeeperFlowOriginator flow_originator;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV6_TUPLE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__descriptor) \
    , NULL, NULL, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_UNSPECIFIED, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_UNSPECIFIED }


/*
 * IPv4 Gatekeeper request (Check peer IP, the direction providing which policy to check for)
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv4Req
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  uint32_t addr_ipv4;
  Gatekeeper__Southbound__V1__GatekeeperFlowDirection flow_direction;
  Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple *flow_ipv4;
  Gatekeeper__Southbound__V1__GatekeeperFlowOriginator flow_originator;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV4_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv4_req__descriptor) \
    , NULL, 0, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_UNSPECIFIED, NULL, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_UNSPECIFIED }


/*
 * IPv6 Gatekeeper request (Check peer IP, the direction providing which policy to check for)
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperIpv6Req
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonRequest *header;
  ProtobufCBinaryData addr_ipv6;
  Gatekeeper__Southbound__V1__GatekeeperFlowDirection flow_direction;
  Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple *flow_ipv6;
  Gatekeeper__Southbound__V1__GatekeeperFlowOriginator flow_originator;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV6_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv6_req__descriptor) \
    , NULL, {0,NULL}, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_DIRECTION__GATEKEEPER_FLOW_DIRECTION_UNSPECIFIED, NULL, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FLOW_ORIGINATOR__GATEKEEPER_FLOW_ORIGINATOR_UNSPECIFIED }


/*
 * Overall Gatekeeper request
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperReq
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperFqdnReq *req_fqdn;
  Gatekeeper__Southbound__V1__GatekeeperIpv4Req *req_ipv4;
  Gatekeeper__Southbound__V1__GatekeeperIpv6Req *req_ipv6;
  Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq *req_ipv4_tuple;
  Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq *req_ipv6_tuple;
  Gatekeeper__Southbound__V1__GatekeeperAppReq *req_app;
  Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq *req_https_sni;
  Gatekeeper__Southbound__V1__GatekeeperHttpHostReq *req_http_host;
  Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq *req_http_url;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_req__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/*
 * Gatekeeper Reply common fields
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperCommonReply
{
  ProtobufCMessage base;
  uint32_t request_id;
  Gatekeeper__Southbound__V1__GatekeeperAction action;
  uint32_t ttl;
  char *policy;
  uint32_t category_id;
  uint32_t confidence_level;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_COMMON_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_common_reply__descriptor) \
    , 0, GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_ACTION__GATEKEEPER_ACTION_UNSPECIFIED, 0, (char *)protobuf_c_empty_string, 0, 0 }


struct  _Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply
{
  ProtobufCMessage base;
  uint32_t redirect_ipv4;
  ProtobufCBinaryData redirect_ipv6;
  char *redirect_cname;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FQDN_REDIRECT_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__descriptor) \
    , 0, {0,NULL}, (char *)protobuf_c_empty_string }


struct  _Gatekeeper__Southbound__V1__GatekeeperFqdnReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
  Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply *redirect;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_FQDN_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_fqdn_reply__descriptor) \
    , NULL, NULL }


struct  _Gatekeeper__Southbound__V1__GatekeeperIpv4Reply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV4_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv4_reply__descriptor) \
    , NULL }


struct  _Gatekeeper__Southbound__V1__GatekeeperIpv6Reply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV6_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv6_reply__descriptor) \
    , NULL }


struct  _Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV4_TUPLE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__descriptor) \
    , NULL }


struct  _Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_IPV6_TUPLE_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__descriptor) \
    , NULL }


/*
 * App name gatekeeper reply
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperAppReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_APP_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_app_reply__descriptor) \
    , NULL }


/*
 * HTTPS SNI gatekeeper reply
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTPS_SNI_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_https_sni_reply__descriptor) \
    , NULL }


/*
 * HTTP Host gatekeeper reply
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpHostReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTP_HOST_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_http_host_reply__descriptor) \
    , NULL }


/*
 * HTTP URL gatekeeper reply
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperCommonReply *header;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_HTTP_URL_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_http_url_reply__descriptor) \
    , NULL }


/*
 * Overall Gatekeeper reply
 */
struct  _Gatekeeper__Southbound__V1__GatekeeperReply
{
  ProtobufCMessage base;
  Gatekeeper__Southbound__V1__GatekeeperFqdnReply *reply_fqdn;
  Gatekeeper__Southbound__V1__GatekeeperIpv4Reply *reply_ipv4;
  Gatekeeper__Southbound__V1__GatekeeperIpv6Reply *reply_ipv6;
  Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply *reply_ipv4_tuple;
  Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply *reply_ipv6_tuple;
  Gatekeeper__Southbound__V1__GatekeeperAppReply *reply_app;
  Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply *reply_https_sni;
  Gatekeeper__Southbound__V1__GatekeeperHttpHostReply *reply_http_host;
  Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply *reply_http_url;
};
#define GATEKEEPER__SOUTHBOUND__V1__GATEKEEPER_REPLY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gatekeeper__southbound__v1__gatekeeper_reply__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL }


/* Gatekeeper__Southbound__V1__GatekeeperCommonRequest methods */
void   gatekeeper__southbound__v1__gatekeeper_common_request__init
                     (Gatekeeper__Southbound__V1__GatekeeperCommonRequest         *message);
size_t gatekeeper__southbound__v1__gatekeeper_common_request__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonRequest   *message);
size_t gatekeeper__southbound__v1__gatekeeper_common_request__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonRequest   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_common_request__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonRequest   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperCommonRequest *
       gatekeeper__southbound__v1__gatekeeper_common_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_common_request__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperCommonRequest *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperFqdnReq methods */
void   gatekeeper__southbound__v1__gatekeeper_fqdn_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperFqdnReq *
       gatekeeper__southbound__v1__gatekeeper_fqdn_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_fqdn_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperAppReq methods */
void   gatekeeper__southbound__v1__gatekeeper_app_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperAppReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_app_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_app_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_app_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperAppReq *
       gatekeeper__southbound__v1__gatekeeper_app_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_app_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperAppReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq methods */
void   gatekeeper__southbound__v1__gatekeeper_https_sni_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq *
       gatekeeper__southbound__v1__gatekeeper_https_sni_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_https_sni_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpHostReq methods */
void   gatekeeper__southbound__v1__gatekeeper_http_host_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpHostReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpHostReq *
       gatekeeper__southbound__v1__gatekeeper_http_host_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_http_host_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpHostReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq methods */
void   gatekeeper__southbound__v1__gatekeeper_http_url_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq *
       gatekeeper__southbound__v1__gatekeeper_http_url_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_http_url_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple *
       gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq *
       gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple *
       gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq *
       gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv4Req methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv4_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4Req         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Req   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Req   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Req   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv4Req *
       gatekeeper__southbound__v1__gatekeeper_ipv4_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv4_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4Req *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv6Req methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv6_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6Req         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Req   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Req   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Req   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv6Req *
       gatekeeper__southbound__v1__gatekeeper_ipv6_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv6_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6Req *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperReq methods */
void   gatekeeper__southbound__v1__gatekeeper_req__init
                     (Gatekeeper__Southbound__V1__GatekeeperReq         *message);
size_t gatekeeper__southbound__v1__gatekeeper_req__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperReq   *message);
size_t gatekeeper__southbound__v1__gatekeeper_req__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperReq   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_req__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperReq   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperReq *
       gatekeeper__southbound__v1__gatekeeper_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_req__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperReq *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperCommonReply methods */
void   gatekeeper__southbound__v1__gatekeeper_common_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperCommonReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_common_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_common_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_common_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperCommonReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperCommonReply *
       gatekeeper__southbound__v1__gatekeeper_common_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_common_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperCommonReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply methods */
void   gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply *
       gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperFqdnReply methods */
void   gatekeeper__southbound__v1__gatekeeper_fqdn_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_fqdn_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperFqdnReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperFqdnReply *
       gatekeeper__southbound__v1__gatekeeper_fqdn_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_fqdn_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperFqdnReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv4Reply methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv4_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4Reply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Reply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Reply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4Reply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv4Reply *
       gatekeeper__southbound__v1__gatekeeper_ipv4_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv4_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4Reply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv6Reply methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv6_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6Reply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Reply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Reply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6Reply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv6Reply *
       gatekeeper__southbound__v1__gatekeeper_ipv6_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv6_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6Reply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply *
       gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply methods */
void   gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply *
       gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperAppReply methods */
void   gatekeeper__southbound__v1__gatekeeper_app_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperAppReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_app_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_app_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_app_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperAppReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperAppReply *
       gatekeeper__southbound__v1__gatekeeper_app_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_app_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperAppReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply methods */
void   gatekeeper__southbound__v1__gatekeeper_https_sni_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_https_sni_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply *
       gatekeeper__southbound__v1__gatekeeper_https_sni_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_https_sni_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpHostReply methods */
void   gatekeeper__southbound__v1__gatekeeper_http_host_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpHostReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_http_host_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpHostReply *
       gatekeeper__southbound__v1__gatekeeper_http_host_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_http_host_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpHostReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply methods */
void   gatekeeper__southbound__v1__gatekeeper_http_url_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_http_url_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply *
       gatekeeper__southbound__v1__gatekeeper_http_url_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_http_url_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply *message,
                      ProtobufCAllocator *allocator);
/* Gatekeeper__Southbound__V1__GatekeeperReply methods */
void   gatekeeper__southbound__v1__gatekeeper_reply__init
                     (Gatekeeper__Southbound__V1__GatekeeperReply         *message);
size_t gatekeeper__southbound__v1__gatekeeper_reply__get_packed_size
                     (const Gatekeeper__Southbound__V1__GatekeeperReply   *message);
size_t gatekeeper__southbound__v1__gatekeeper_reply__pack
                     (const Gatekeeper__Southbound__V1__GatekeeperReply   *message,
                      uint8_t             *out);
size_t gatekeeper__southbound__v1__gatekeeper_reply__pack_to_buffer
                     (const Gatekeeper__Southbound__V1__GatekeeperReply   *message,
                      ProtobufCBuffer     *buffer);
Gatekeeper__Southbound__V1__GatekeeperReply *
       gatekeeper__southbound__v1__gatekeeper_reply__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gatekeeper__southbound__v1__gatekeeper_reply__free_unpacked
                     (Gatekeeper__Southbound__V1__GatekeeperReply *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Gatekeeper__Southbound__V1__GatekeeperCommonRequest_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperCommonRequest *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperFqdnReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperFqdnReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperAppReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperAppReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpHostReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv4FlowTuple *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv6FlowTuple *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv4Req_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv4Req *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv6Req_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv6Req *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperReq_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperReq *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperCommonReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperCommonReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperFqdnRedirectReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperFqdnReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperFqdnReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv4Reply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv4Reply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv6Reply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv6Reply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv4TupleReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperIpv6TupleReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperAppReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperAppReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpsSniReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpHostReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpHostReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperHttpUrlReply *message,
                  void *closure_data);
typedef void (*Gatekeeper__Southbound__V1__GatekeeperReply_Closure)
                 (const Gatekeeper__Southbound__V1__GatekeeperReply *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    gatekeeper__southbound__v1__gatekeeper_flow_direction__descriptor;
extern const ProtobufCEnumDescriptor    gatekeeper__southbound__v1__gatekeeper_flow_originator__descriptor;
extern const ProtobufCEnumDescriptor    gatekeeper__southbound__v1__gatekeeper_action__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_common_request__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_fqdn_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_app_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_https_sni_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_http_host_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_http_url_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv4_flow_tuple__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv6_flow_tuple__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv4_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv6_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_req__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_common_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_fqdn_redirect_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_fqdn_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv4_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv6_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv4_tuple_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_ipv6_tuple_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_app_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_https_sni_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_http_host_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_http_url_reply__descriptor;
extern const ProtobufCMessageDescriptor gatekeeper__southbound__v1__gatekeeper_reply__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_gatekeeper_2eproto__INCLUDED */
