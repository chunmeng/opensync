/*
Copyright (c) 2015, Plume Design Inc. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
   3. Neither the name of the Plume Design Inc. nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: lte_info.proto */

#ifndef PROTOBUF_C_lte_5finfo_2eproto__INCLUDED
#define PROTOBUF_C_lte_5finfo_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Interfaces__LteInfo__LteInfo Interfaces__LteInfo__LteInfo;
typedef struct _Interfaces__LteInfo__LteSigQual Interfaces__LteInfo__LteSigQual;
typedef struct _Interfaces__LteInfo__LteNetServingCellInfo Interfaces__LteInfo__LteNetServingCellInfo;
typedef struct _Interfaces__LteInfo__LteNetNeighborCellInfo Interfaces__LteInfo__LteNetNeighborCellInfo;
typedef struct _Interfaces__LteInfo__LteInfoReport Interfaces__LteInfo__LteInfoReport;


/* --- enums --- */

/*
 * NeighborCell mode
 */
typedef enum _Interfaces__LteInfo__LteNeighborCellMode {
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_CELL_MODE__LTE_CELL_MODE_UNSPECIFIED = 0,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_CELL_MODE__LTE_CELL_MODE_LTE = 1,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_CELL_MODE__LTE_CELL_MODE_WCDMA = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(INTERFACES__LTE_INFO__LTE_NEIGHBOR_CELL_MODE)
} Interfaces__LteInfo__LteNeighborCellMode;
/*
 * NeighborCell freq mode
 */
typedef enum _Interfaces__LteInfo__LteNeighborFreqMode {
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_UNSPECIFIED = 0,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_INTRA = 1,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_INTER = 2,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_WCDMA = 3,
  INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_WCDMA_LTE = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE)
} Interfaces__LteInfo__LteNeighborFreqMode;

/* --- messages --- */

struct  _Interfaces__LteInfo__LteInfo
{
  ProtobufCMessage base;
  char *prod_id_info;
  char *chip_serial;
  char *imei;
  char *imsi;
  char *iccid;
  char *sim_status;
  char *net_reg_status;
  char *service_provider_name;
  char *sim_slot;
};
#define INTERFACES__LTE_INFO__LTE_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&interfaces__lte_info__lte_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Interfaces__LteInfo__LteSigQual
{
  ProtobufCMessage base;
  char *rssi;
  char *ber;
};
#define INTERFACES__LTE_INFO__LTE_SIG_QUAL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&interfaces__lte_info__lte_sig_qual__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Interfaces__LteInfo__LteNetServingCellInfo
{
  ProtobufCMessage base;
  char *cell_type;
  char *state;
  char *is_tdd;
  char *mcc;
  char *mnc;
  char *cellid;
  char *pcid;
  char *uarfcn;
  char *earfcn;
  char *freq_band;
  char *ul_bandwidth;
  char *dl_bandwidth;
  char *tac;
  char *rsrp;
  char *rsrq;
  char *rssi;
  char *sinr;
  char *srxlev;
};
#define INTERFACES__LTE_INFO__LTE_NET_SERVING_CELL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&interfaces__lte_info__lte_net_serving_cell_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * [+QENG: "neighbourcell intra","LTE",<earfcn>,<pcid>,<rsrq>,<rsrp>,<rssi>,<sinr>,<srxlev>,<cell_resel_priority>,<s_non_intra_search>,<thresh_serving_low>,<s_intra_search>
 * [+QENG: "neighbourcell inter","LTE",<earfcn>,<pcid>,<rsrq>,<rsrp>,<rssi>,<sinr>,<srxlev>,<cell_resel_priority>,<threshX_low>,<threshX_high>
 * [+QENG:"neighbourcell","WCDMA",<uarfcn>,<cell_resel_priority>,<thresh_Xhigh>,<thresh_Xlow>,<psc>,<rscp><ecno>,<srxlev>
 * [+QENG: "neighbourcell","LTE",<earfcn>,<cellid>,<rsrp>,<rsrq>,<s_rxlev>
 */
struct  _Interfaces__LteInfo__LteNetNeighborCellInfo
{
  ProtobufCMessage base;
  Interfaces__LteInfo__LteNeighborCellMode mode;
  Interfaces__LteInfo__LteNeighborFreqMode freq_mode;
  char *earfcn;
  char *uarfcn;
  char *pcid;
  char *rsrq;
  char *rsrp;
  char *rssi;
  char *sinr;
  char *srxlev_base_station;
  char *cell_resel_priority;
  char *s_non_intra_search;
  char *thresh_serving_low;
  char *s_intra_search;
  char *thresh_x_low;
  char *thresh_x_high;
  char *psc;
  char *rscp;
  char *ecno;
  char *set;
  char *rank;
  char *cellid;
  char *srxlev_inter_freq;
};
#define INTERFACES__LTE_INFO__LTE_NET_NEIGHBOR_CELL_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&interfaces__lte_info__lte_net_neighbor_cell_info__descriptor) \
    , INTERFACES__LTE_INFO__LTE_NEIGHBOR_CELL_MODE__LTE_CELL_MODE_UNSPECIFIED, INTERFACES__LTE_INFO__LTE_NEIGHBOR_FREQ_MODE__LTE_FREQ_MODE_UNSPECIFIED, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * LTE info
 */
struct  _Interfaces__LteInfo__LteInfoReport
{
  ProtobufCMessage base;
  char *if_name;
  /*
   * LTE info
   */
  Interfaces__LteInfo__LteInfo *lte_info;
  /*
   * Signal quality
   */
  Interfaces__LteInfo__LteSigQual *lte_sig_qual;
  /*
   * Serving cell info
   */
  Interfaces__LteInfo__LteNetServingCellInfo *lte_srv_cell;
  /*
   * Neighbor cell info
   */
  size_t n_lte_neigh_cell_info;
  Interfaces__LteInfo__LteNetNeighborCellInfo **lte_neigh_cell_info;
};
#define INTERFACES__LTE_INFO__LTE_INFO_REPORT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&interfaces__lte_info__lte_info_report__descriptor) \
    , (char *)protobuf_c_empty_string, NULL, NULL, NULL, 0,NULL }


/* Interfaces__LteInfo__LteInfo methods */
void   interfaces__lte_info__lte_info__init
                     (Interfaces__LteInfo__LteInfo         *message);
size_t interfaces__lte_info__lte_info__get_packed_size
                     (const Interfaces__LteInfo__LteInfo   *message);
size_t interfaces__lte_info__lte_info__pack
                     (const Interfaces__LteInfo__LteInfo   *message,
                      uint8_t             *out);
size_t interfaces__lte_info__lte_info__pack_to_buffer
                     (const Interfaces__LteInfo__LteInfo   *message,
                      ProtobufCBuffer     *buffer);
Interfaces__LteInfo__LteInfo *
       interfaces__lte_info__lte_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   interfaces__lte_info__lte_info__free_unpacked
                     (Interfaces__LteInfo__LteInfo *message,
                      ProtobufCAllocator *allocator);
/* Interfaces__LteInfo__LteSigQual methods */
void   interfaces__lte_info__lte_sig_qual__init
                     (Interfaces__LteInfo__LteSigQual         *message);
size_t interfaces__lte_info__lte_sig_qual__get_packed_size
                     (const Interfaces__LteInfo__LteSigQual   *message);
size_t interfaces__lte_info__lte_sig_qual__pack
                     (const Interfaces__LteInfo__LteSigQual   *message,
                      uint8_t             *out);
size_t interfaces__lte_info__lte_sig_qual__pack_to_buffer
                     (const Interfaces__LteInfo__LteSigQual   *message,
                      ProtobufCBuffer     *buffer);
Interfaces__LteInfo__LteSigQual *
       interfaces__lte_info__lte_sig_qual__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   interfaces__lte_info__lte_sig_qual__free_unpacked
                     (Interfaces__LteInfo__LteSigQual *message,
                      ProtobufCAllocator *allocator);
/* Interfaces__LteInfo__LteNetServingCellInfo methods */
void   interfaces__lte_info__lte_net_serving_cell_info__init
                     (Interfaces__LteInfo__LteNetServingCellInfo         *message);
size_t interfaces__lte_info__lte_net_serving_cell_info__get_packed_size
                     (const Interfaces__LteInfo__LteNetServingCellInfo   *message);
size_t interfaces__lte_info__lte_net_serving_cell_info__pack
                     (const Interfaces__LteInfo__LteNetServingCellInfo   *message,
                      uint8_t             *out);
size_t interfaces__lte_info__lte_net_serving_cell_info__pack_to_buffer
                     (const Interfaces__LteInfo__LteNetServingCellInfo   *message,
                      ProtobufCBuffer     *buffer);
Interfaces__LteInfo__LteNetServingCellInfo *
       interfaces__lte_info__lte_net_serving_cell_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   interfaces__lte_info__lte_net_serving_cell_info__free_unpacked
                     (Interfaces__LteInfo__LteNetServingCellInfo *message,
                      ProtobufCAllocator *allocator);
/* Interfaces__LteInfo__LteNetNeighborCellInfo methods */
void   interfaces__lte_info__lte_net_neighbor_cell_info__init
                     (Interfaces__LteInfo__LteNetNeighborCellInfo         *message);
size_t interfaces__lte_info__lte_net_neighbor_cell_info__get_packed_size
                     (const Interfaces__LteInfo__LteNetNeighborCellInfo   *message);
size_t interfaces__lte_info__lte_net_neighbor_cell_info__pack
                     (const Interfaces__LteInfo__LteNetNeighborCellInfo   *message,
                      uint8_t             *out);
size_t interfaces__lte_info__lte_net_neighbor_cell_info__pack_to_buffer
                     (const Interfaces__LteInfo__LteNetNeighborCellInfo   *message,
                      ProtobufCBuffer     *buffer);
Interfaces__LteInfo__LteNetNeighborCellInfo *
       interfaces__lte_info__lte_net_neighbor_cell_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   interfaces__lte_info__lte_net_neighbor_cell_info__free_unpacked
                     (Interfaces__LteInfo__LteNetNeighborCellInfo *message,
                      ProtobufCAllocator *allocator);
/* Interfaces__LteInfo__LteInfoReport methods */
void   interfaces__lte_info__lte_info_report__init
                     (Interfaces__LteInfo__LteInfoReport         *message);
size_t interfaces__lte_info__lte_info_report__get_packed_size
                     (const Interfaces__LteInfo__LteInfoReport   *message);
size_t interfaces__lte_info__lte_info_report__pack
                     (const Interfaces__LteInfo__LteInfoReport   *message,
                      uint8_t             *out);
size_t interfaces__lte_info__lte_info_report__pack_to_buffer
                     (const Interfaces__LteInfo__LteInfoReport   *message,
                      ProtobufCBuffer     *buffer);
Interfaces__LteInfo__LteInfoReport *
       interfaces__lte_info__lte_info_report__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   interfaces__lte_info__lte_info_report__free_unpacked
                     (Interfaces__LteInfo__LteInfoReport *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Interfaces__LteInfo__LteInfo_Closure)
                 (const Interfaces__LteInfo__LteInfo *message,
                  void *closure_data);
typedef void (*Interfaces__LteInfo__LteSigQual_Closure)
                 (const Interfaces__LteInfo__LteSigQual *message,
                  void *closure_data);
typedef void (*Interfaces__LteInfo__LteNetServingCellInfo_Closure)
                 (const Interfaces__LteInfo__LteNetServingCellInfo *message,
                  void *closure_data);
typedef void (*Interfaces__LteInfo__LteNetNeighborCellInfo_Closure)
                 (const Interfaces__LteInfo__LteNetNeighborCellInfo *message,
                  void *closure_data);
typedef void (*Interfaces__LteInfo__LteInfoReport_Closure)
                 (const Interfaces__LteInfo__LteInfoReport *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    interfaces__lte_info__lte_neighbor_cell_mode__descriptor;
extern const ProtobufCEnumDescriptor    interfaces__lte_info__lte_neighbor_freq_mode__descriptor;
extern const ProtobufCMessageDescriptor interfaces__lte_info__lte_info__descriptor;
extern const ProtobufCMessageDescriptor interfaces__lte_info__lte_sig_qual__descriptor;
extern const ProtobufCMessageDescriptor interfaces__lte_info__lte_net_serving_cell_info__descriptor;
extern const ProtobufCMessageDescriptor interfaces__lte_info__lte_net_neighbor_cell_info__descriptor;
extern const ProtobufCMessageDescriptor interfaces__lte_info__lte_info_report__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_lte_5finfo_2eproto__INCLUDED */
