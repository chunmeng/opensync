/*
Copyright (c) 2015, Plume Design Inc. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
   1. Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
   2. Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
   3. Neither the name of the Plume Design Inc. nor the
      names of its contributors may be used to endorse or promote products
      derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL Plume Design Inc. BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: opensync_nflog.proto */

#ifndef PROTOBUF_C_opensync_5fnflog_2eproto__INCLUDED
#define PROTOBUF_C_opensync_5fnflog_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Nflog Nflog;


/* --- enums --- */


/* --- messages --- */

struct  _Nflog
{
  ProtobufCMessage base;
  /*
   * Serial number of the device reporting the stats
   */
  char *node_id;
  /*
   * Location id of the device reporting the stats
   */
  char *location_id;
  /*
   * Packet timestamp: Unix time in seconds
   */
  protobuf_c_boolean has_timestamp;
  double timestamp;
  /*
   * Hardware address
   */
  char *hw_addr;
  /*
   * Firewall mark
   */
  protobuf_c_boolean has_fw_mark;
  uint32_t fw_mark;
  /*
   * Ingress interface name
   */
  char *ingress_ifname;
  /*
   * Egress interface name
   */
  char *egress_ifname;
  /*
   * Ingress physical interface name
   */
  char *ingress_phyifname;
  /*
   * Egress physical interface name
   */
  char *egress_phyifname;
  /*
   * iptables rule prefix
   */
  char *prefix;
  /*
   * Socket group ID (NOT the user group id)
   */
  protobuf_c_boolean has_nl_group_id;
  int32_t nl_group_id;
  /*
   * Packet data
   */
  protobuf_c_boolean has_payload;
  ProtobufCBinaryData payload;
  /*
   * Hardware header type
   */
  protobuf_c_boolean has_hwtype;
  uint32_t hwtype;
  /*
   * Hardware header length
   */
  protobuf_c_boolean has_hwlen;
  uint32_t hwlen;
  /*
   * Hawrdware header data
   */
  protobuf_c_boolean has_hwheader;
  ProtobufCBinaryData hwheader;
};
#define NFLOG__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nflog__descriptor) \
    , NULL, NULL, 0, 0, NULL, 0, 0, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, {0,NULL}, 0, 0, 0, 0, 0, {0,NULL} }


/* Nflog methods */
void   nflog__init
                     (Nflog         *message);
size_t nflog__get_packed_size
                     (const Nflog   *message);
size_t nflog__pack
                     (const Nflog   *message,
                      uint8_t             *out);
size_t nflog__pack_to_buffer
                     (const Nflog   *message,
                      ProtobufCBuffer     *buffer);
Nflog *
       nflog__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nflog__free_unpacked
                     (Nflog *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Nflog_Closure)
                 (const Nflog *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor nflog__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_opensync_5fnflog_2eproto__INCLUDED */
