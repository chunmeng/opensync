pipeline {
    agent {
        node {
            label 'qa_slo'
        }
    }
    stages {
        stage('pre_run') {
            steps {
                echo 'junit_reports'
                sh 'mkdir -p junit_reports'
            }
        }
        stage('shellcheck') {
            steps {
                // SC2039: In POSIX sh, something is undefined.
                // SC2015: Note that A && B || C is not if-then-else. C may run when A is true.
                // SC1091: Not following: .sourcefile was not specified as input.
                sh 'shellcheck --version'
                sh 'shellcheck --exclude=SC2039,SC2015,SC1091 --format checkstyle $(find ./src/ -name "*.sh" -type f) | xmlstarlet tr src/fut/checkstylejunit.xslt | tee junit_reports/shellcheck.xml'
                sh '[ $(grep -oh "failures=.*" junit_reports/shellcheck.xml | cut -d\'"\' -f2) -eq 0 ] && return 0 || return 1'
            }
        }
    }
    post {
        always {
            junit testResults: 'junit_reports/*.xml', healthScaleFactor: 0.0, allowEmptyResults: true
            archiveArtifacts artifacts: 'junit_reports/*.xml'
        }
    }
}
